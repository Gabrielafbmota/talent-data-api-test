module.exports = {
  root: true,
  parser: 'babel-eslint',
  parserOptions: { sourceType: 'module' },
  plugins: [
    'standard',
    'prettier',
    'security',
    'promise',
    'import',
    'sonarjs',
    'unicorn',
    'eslint-comments',
    'filenames',
    'optimize-regex',
    'extra-rules',
    'you-dont-need-lodash-underscore',
  ],
  extends: [
    'standard',
    'prettier/standard',
    'plugin:security/recommended',
    'plugin:promise/recommended',
    'plugin:import/recommended',
    'plugin:sonarjs/recommended',
    'plugin:unicorn/recommended',
    'plugin:eslint-comments/recommended',
    'plugin:you-dont-need-lodash-underscore/compatible',
  ],
  globals: { __DEV__: true, __ENV__: true, __VERSION__: true },
  env: { es6: true, node: true, jest: true },
  rules: {
    'array-callback-return': ['error', { allowImplicit: true }],
    'block-scoped-var': 'error',
    'comma-dangle': [
      'error',
      {
        arrays: 'always-multiline',
        objects: 'always-multiline',
        imports: 'always-multiline',
        exports: 'always-multiline',
        functions: 'ignore',
      },
    ],
    'consistent-return': 'error',
    complexity: ['warn', 9],
    'linebreak-style': ['error', 'unix'],
    'max-depth': ['warn', 3],
    'max-nested-callbacks': ['warn', 3],
    'max-params': ['warn', 3],
    'max-statements': ['warn', 100],
    'no-await-in-loop': 'error',
    'no-extra-parens': ['error', 'all', { ignoreJSX: 'single-line' }],
    'no-shadow': 'error',
    'no-use-before-define': 'error',
    'padded-blocks': 'off',
    radix: 'error',
    'sort-keys': 'off',
    'sort-vars': 'off',
    'template-curly-spacing': 'off',
    indent: [
      'error',
      2,
      {
        ignoredNodes: ['TemplateLiteral'],
      },
    ],
    'extra-rules/no-commented-out-code': 'warn',
    'extra-rules/potential-point-free': 'warn',
    'filenames/match-exported': ['warn', 'kebab'],
    'node/no-unsupported-features/es-syntax': 'off',
    'optimize-regex/optimize-regex': 'warn',
    'security/detect-object-injection': 'off',
    'sonarjs/no-duplicate-string': 'off',
    'unicorn/consistent-function-scoping': 'off',
    'unicorn/filename-case': 'off',
    'unicorn/no-null': 'off',
    'unicorn/no-reduce': 'off',
    'unicorn/prefer-ternary': 'off',
    'unicorn/prevent-abbreviations': 'off',
  },
  settings: { 'import/resolver': { webpack: './webpack/webpack.dev.js' } },
}
